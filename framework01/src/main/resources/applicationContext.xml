<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

<!--<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">-->
<!--<bean id="coffeeBean" class="edu.soft2.ioc.coffee.CoffeeBean">
    <property name="flavor">
        <value>香芋</value>
    </property>
</bean>-->
    <bean id="espressoBean" class="edu.soft2.ioc.coffee.EspressoBean" scope="singleton">
        <property name="flavor">
            <value>(黑大帅牌)浓缩咖啡</value>
        </property>
    </bean>
    <bean id="mocaBean" class="edu.soft2.ioc.coffee.MocaBean">
        <property name="flavor">
            <value>(黑大帅牌)摩卡</value>
        </property>
    </bean>
    <bean id="coffeeMachine" class="edu.soft2.ioc.coffee.CoffeeMachine">
        <property name="color" value="红"></property>
<!--        <property name="coffeeBean" ref="mocaBean"></property>外部引用-->
        <property name="coffeeBean">
            <bean id="mocaBean" class="edu.soft2.ioc.coffee.MocaBean"><!--内部导入-->
                <property name="flavor" value="(黑大帅牌)摩卡"></property>
            </bean>
        </property>
    </bean>

<!--    加载注解的bean组件-->
<!--    <context:component-scan base-package="edu.soft2.ioc.print"/>-->

   <!-- <bean id="colorInk" class="edu.soft2.ioc.print.ColorInk">
&lt;!&ndash;    将class对应的类的对象，作为一个bean对象放入IoC容器中，由其负责管理(创建对象)&ndash;&gt;
        <property name="type" value="彩色"></property>
    </bean>
    <bean id="greyInk" class="edu.soft2.ioc.print.GreyInk">
        <property name="type" value="灰色"></property>
    </bean>
    <bean id="printer" class="edu.soft2.ioc.print.Printer">&lt;!&ndash;装配一个bean到IoC容器中，此bean对象从此可由IoC管理&ndash;&gt;
        <property name="ink" ref="colorInk"></property>&lt;!&ndash;由IoC将id为colorInk的bean对象注入(DI)到此处&ndash;&gt;
        <property name="paper" ref="a4Paper"></property>
    </bean>
    <bean id="a4Paper" class="edu.soft2.ioc.print.A4Paper">
        <property name="size" value="A4"></property>
    </bean>
    <bean id="b5Paper" class="edu.soft2.ioc.print.B5Paper">
        <property name="size" value="B5"></property>
    </bean>-->

    <context:annotation-config/>
<!--    开启注解扫描，框架会自动扫描注释并生产bean对象-->
    <context:component-scan base-package="edu.soft2"/>
<!--    开启aop注解，使得Java类中的aop注解生效-->
    <aop:aspectj-autoproxy/>
<!--    开启代理-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

<!--&lt;!&ndash;    配置目标类【即要实现哪个类】&ndash;&gt;
    <bean id="helloworldService" class="edu.soft2.service.impl.HelloworldService"/>
&lt;!&ndash;    配置切面类&ndash;&gt;
    <bean id="helloworldAspect" class="edu.soft2.aop.HelloworldAspect"/>
&lt;!&ndash;    配置AOP&ndash;&gt;
&lt;!&ndash;    开启代理，默认值为false&ndash;&gt;
    <aop:config proxy-target-class="true">
&lt;!&ndash;        定义切入点&ndash;&gt;
        <aop:pointcut expression="execution(* edu.soft2.service..*.*(..))" id="helloworldPointcut"/>
&lt;!&ndash;        切面&ndash;&gt;
        <aop:aspect ref="helloworldAspect">
&lt;!&ndash;            前置增强配置：那个切入点的那个方法&ndash;&gt;
            <aop:before  pointcut-ref="helloworldPointcut" method="beforeAdvice"/>
&lt;!&ndash;            后置增强配置&ndash;&gt;
            <aop:after pointcut-ref="helloworldPointcut" method="afterAdvice"/>
&lt;!&ndash;            一个切入点的引入&ndash;&gt;
        </aop:aspect>
    </aop:config>-->
</beans>